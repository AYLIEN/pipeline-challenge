info:
  contact:
    email: eng-team@aylien.com
    name: API Engineering Team
    url: https://aylien.com
  
  title: AYLIEN Challenge Messages API
  version: "1.0"

openapi: 3.0.1
servers:
  - url: http://localhost:5000
paths:
  /messages:
    get:
      description: Get a list of messages.
      parameters:
        - name: max_messages
          in: query
          required: true
          schema:
            minimum: 1
            format: int32
            nullable: false
            type: integer
          description: Maximum number of messages to receive.
      responses:
        "200":
          description: An object with a list of messages inside
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"

  /ack:
    post:
      description: Acknowledge a set of message IDs.
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: integer
              type: array
      responses:
        "200":
          description: An object with a status "OK" and list of IDs considered dead in the request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcknowledgeResponse"

  /process:
    post:
      description: Process a set of messages
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessItems"
      responses:
        "200":
          description: An object with a status "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessResponse"
        "500":
          description: An object with a status "FAILED"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessResponse"

  /metrics:
    get:
      description: Latency and dead message metrics
      responses:
        "200":
          description: A set of metrics and a count of dead messages
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metrics"

components:
  schemas:
    Metrics:
      properties:
        unit:
          type: string
        dead:
          type: integer
        latency_average:
          type: number
        latency_p90:
          type: number
        latency_p99:
          type: number
        latency_p50:
          type: number
        latency_min:
          type: number
        latency_max:
          type: number
    Messages:
      properties:
        messages:
          description: An array of messages
          items:
            $ref: "#/components/schemas/Message"
          type: array
      type: object
    Message:
      properties:
        title:
          type: string
        body:
          type: string
        keywords:
          type: array
          items:
            type: string
        social_share_counts:
          type: array
          items:
            $ref: "#/components/schemas/SocialSharesCount"
    AcknowledgeResponse:
      properties:
        status:
          type: string
          enum: [OK, FAILED]
        dead:
          type: array
          items:
            type: integer
    SocialSharesCount:
      properties:
        network:
          type: string
        count:
          type: integer
      type: object

    ProcessItems:
      type: array
      items:
        $ref: "#/components/schemas/ProcessItem"

    ProcessItem:
      type: object
      properties:
        text:
          type: string
        words_count:
          type: integer
        characters_count:
          type: integer
        keywords:
          type: array
          items:
            type: string
        facebook_shares:
          type: integer
        twiter_shares:
          type: integer
        reddit_shares:
          type: integer
        sum_shares:
          type: integer
    ProcessResponse:
      type: object
      properties:
        status:
          type: string
          enum: [OK, FAILED]
